name: CI/CD Pipeline
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Add PostgreSQL service for testing
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: books
          POSTGRES_DB: books
          POSTGRES_USER: books
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Match your Docker image version
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r bookcatalog/requirements.txt
      
      - name: Create static directory
        run: |
          mkdir -p bookcatalog/static
      
      - name: Run pytest
        working-directory: ./bookcatalog
        env:
          # Use SQLite for tests (as configured in your settings)
          DJANGO_SETTINGS_MODULE: bookcatalog.settings
          DATABASE_URL: sqlite:///test.db
        run: pytest -v
  
  migrations-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r bookcatalog/requirements.txt
      
      - name: Create static directory
        run: |
          mkdir -p bookcatalog/static
      
      - name: Check for uncommitted migrations
        working-directory: ./bookcatalog
        env:
          DJANGO_SETTINGS_MODULE: bookcatalog.settings
        run: python manage.py makemigrations --check
  
  build-docker-image:
    runs-on: ubuntu-latest
    needs:
      - test
      - migrations-check
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/fethullahcucu/devops_camp/bookcatalog
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./bookcatalog
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}